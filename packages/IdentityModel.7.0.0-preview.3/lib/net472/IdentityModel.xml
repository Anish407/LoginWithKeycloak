<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IdentityModel</name>
    </assembly>
    <members>
        <member name="T:IdentityModel.Base64Url">
            <summary>
            Base64Url encoder/decoder
            </summary>
        </member>
        <member name="M:IdentityModel.Base64Url.Encode(System.Byte[])">
            <summary>
            Encodes the specified byte array.
            </summary>
            <param name="arg">The argument.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Base64Url.Decode(System.String)">
            <summary>
            Decodes the specified string.
            </summary>
            <param name="arg">The argument.</param>
            <returns></returns>
            <exception cref="T:System.Exception">Illegal base64url string!</exception>
        </member>
        <member name="T:IdentityModel.ClaimComparer">
            <summary>
            Compares two instances of Claim
            </summary>
        </member>
        <member name="T:IdentityModel.ClaimComparer.Options">
            <summary>
            Claim comparison options
            </summary>
        </member>
        <member name="P:IdentityModel.ClaimComparer.Options.IgnoreIssuer">
            <summary>
            Specifies if the issuer value is being taken into account
            </summary>
        </member>
        <member name="P:IdentityModel.ClaimComparer.Options.IgnoreValueCase">
            <summary>
            Specifies if claim and issuer value comparison should be case-sensitive
            </summary>
        </member>
        <member name="M:IdentityModel.ClaimComparer.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.ClaimComparer"/> class with default options.
            </summary>
        </member>
        <member name="M:IdentityModel.ClaimComparer.#ctor(IdentityModel.ClaimComparer.Options)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.ClaimComparer"/> class with given comparison options.
            </summary>
            <param name="options">Comparison options.</param>
        </member>
        <member name="M:IdentityModel.ClaimComparer.Equals(System.Security.Claims.Claim,System.Security.Claims.Claim)">
            <inheritdoc/>
        </member>
        <member name="M:IdentityModel.ClaimComparer.GetHashCode(System.Security.Claims.Claim)">
            <inheritdoc/>
        </member>
        <member name="T:IdentityModel.Client.AuthorityUrlValidationStrategy">
            <summary>
            <para>Implementation of <see cref="T:IdentityModel.Client.IAuthorityValidationStrategy"/> based on <see cref="T:System.Uri"/> equality.
            Trailing slash is also ignored.</para>
            </summary>
            <seealso cref="T:IdentityModel.Client.StringComparisonAuthorityValidationStrategy"/>
        </member>
        <member name="M:IdentityModel.Client.AuthorityUrlValidationStrategy.IsIssuerNameValid(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:IdentityModel.Client.AuthorityUrlValidationStrategy.IsEndpointValid(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="T:IdentityModel.Client.BasicAuthenticationHeaderStyle">
            <summary>
            Enum for specifying then encoding style of the basic authentication header
            </summary>
        </member>
        <member name="F:IdentityModel.Client.BasicAuthenticationHeaderStyle.Rfc6749">
            <summary>
            Recommended. Uses the encoding as described in the OAuth 2.0 spec (https://tools.ietf.org/html/rfc6749#section-2.3.1). Base64(urlformencode(client_id) + ":" + urlformencode(client_secret))
            </summary>
        </member>
        <member name="F:IdentityModel.Client.BasicAuthenticationHeaderStyle.Rfc2617">
            <summary>
            Uses the encoding as described in the original basic authentication spec (https://tools.ietf.org/html/rfc2617#section-2 - used by some non-OAuth 2.0 compliant authorization servers). Base64(client_id + ":" + client_secret). 
            </summary>
        </member>
        <member name="T:IdentityModel.Client.ClientCredentialStyle">
            <summary>
            Specifies how the client will transmit client ID and secret
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ClientCredentialStyle.AuthorizationHeader">
            <summary>
            HTTP basic authentication
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ClientCredentialStyle.PostBody">
            <summary>
            Post values in body
            </summary>
        </member>
        <member name="T:IdentityModel.Client.TokenClientOptions">
            <summary>
            Options for TokenClient
            </summary>
        </member>
        <member name="T:IdentityModel.Client.IntrospectionClientOptions">
            <summary>
            Options for IntrospectionClient
            </summary>
        </member>
        <member name="T:IdentityModel.Client.ClientOptions">
            <summary>
            Base-class protocol client options
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientOptions.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientOptions.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientOptions.ClientSecret">
            <summary>
            Gets or sets the client secret.
            </summary>
            <value>
            The client secret.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientOptions.ClientAssertion">
            <summary>
            Gets or sets the client assertion.
            </summary>
            <value>
            The assertion.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientOptions.ClientCredentialStyle">
            <summary>
            Gets or sets the client credential style.
            </summary>
            <value>
            The client credential style.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientOptions.AuthorizationHeaderStyle">
            <summary>
            Gets or sets the basic authentication header style.
            </summary>
            <value>
            The basic authentication header style.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientOptions.Parameters">
            <summary>
            Gets or sets additional request parameters (must not conflict with locally set parameters)
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="T:IdentityModel.Client.DiscoveryCache">
            <summary>
            Helper for caching discovery documents.
            </summary>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryCache.#ctor(System.String,IdentityModel.Client.DiscoveryPolicy)">
            <summary>
            Initialize instance of DiscoveryCache with passed authority.
            </summary>
            <param name="authority">Base address or discovery document endpoint.</param>
            <param name="policy">The policy.</param>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryCache.#ctor(System.String,System.Func{System.Net.Http.HttpMessageInvoker},IdentityModel.Client.DiscoveryPolicy)">
            <summary>
            Initialize instance of DiscoveryCache with passed authority.
            </summary>
            <param name="authority">Base address or discovery document endpoint.</param>
            <param name="httpClientFunc">The HTTP client function.</param>
            <param name="policy">The policy.</param>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryCache.CacheDuration">
            <summary>
            Frequency to refresh discovery document. Defaults to 24 hours.
            </summary>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryCache.GetAsync">
            <summary>
            Get the DiscoveryResponse either from cache or from discovery endpoint.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryCache.Refresh">
            <summary>
            Marks the discovery document as stale and will trigger a request to the discovery endpoint on the next request to get the DiscoveryResponse.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.DiscoveryEndpoint">
            <summary>
            Represents a URL to a discovery endpoint - parsed to separate the URL and authority
            </summary>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryEndpoint.ParseUrl(System.String,System.String)">
            <summary>
            Parses a URL and turns it into authority and discovery endpoint URL.
            </summary>
            <param name="input">The input.</param>
            <param name="path">The path to the discovery document. If not specified this defaults to .well-known/open-id-configuration</param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException">
            Malformed URL
            </exception>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryEndpoint.IsValidScheme(System.Uri)">
            <summary>
            Determines whether the URL uses http or https.
            </summary>
            <param name="url">The URL.</param>
            <returns>
              <c>true</c> if [is valid scheme] [the specified URL]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryEndpoint.IsSecureScheme(System.Uri,IdentityModel.Client.DiscoveryPolicy)">
            <summary>
            Determines whether uses a secure scheme accoding to the policy.
            </summary>
            <param name="url">The URL.</param>
            <param name="policy">The policy.</param>
            <returns>
              <c>true</c> if [is secure scheme] [the specified URL]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryEndpoint.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.Client.DiscoveryEndpoint"/> class.
            </summary>
            <param name="authority">The authority.</param>
            <param name="url">The discovery endpoint URL.</param>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryEndpoint.Authority">
            <summary>
            Gets or sets the authority.
            </summary>
            <value>
            The authority.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryEndpoint.Url">
            <summary>
            Gets or sets the discovery endpoint.
            </summary>
            <value>
            The discovery endpoint.
            </value>
        </member>
        <member name="T:IdentityModel.Client.DiscoveryPolicy">
            <summary>
            Security policy for retrieving a discovery document
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.Authority">
            <summary>
            Gets or sets the Authority on which the policy checks will be based on
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.DiscoveryDocumentPath">
            <summary>
            The path of the discovery document. Defaults to /.well-known/openid-configuration.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.AuthorityValidationStrategy">
            <summary>
            Strategy used to validate issuer name and endpoints based on expected authority.
            Defaults to <see cref="T:IdentityModel.Client.AuthorityUrlValidationStrategy"/>.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.RequireHttps">
            <summary>
            Specifies if HTTPS is enforced on all endpoints. Defaults to true.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.AllowHttpOnLoopback">
            <summary>
            Specifies if HTTP is allowed on loopback addresses. Defaults to true.
            </summary>
        </member>
        <member name="F:IdentityModel.Client.DiscoveryPolicy.LoopbackAddresses">
            <summary>
            Specifies valid loopback addresses, defaults to localhost and 127.0.0.1
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.ValidateIssuerName">
            <summary>
            Specifies if the issuer name is checked to be identical to the authority. Defaults to true.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.ValidateEndpoints">
            <summary>
            Specifies if all endpoints are checked to belong to the authority. Defaults to true.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.EndpointValidationExcludeList">
            <summary>
            Specifies a list of endpoints that should be excluded from validation
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.AdditionalEndpointBaseAddresses">
            <summary>
            Specifies a list of additional base addresses that should be allowed for endpoints
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryPolicy.RequireKeySet">
            <summary>
            Specifies if a key set is required. Defaults to true.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.AuthorizationHeaderExtensions">
            <summary>
            Extensions for HttpRequestMessage
            </summary>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetBasicAuthentication(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Sets a basic authentication header.
            </summary>
            <param name="client">The client.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetBasicAuthenticationOAuth(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Sets a basic authentication header for RFC6749 client authentication.
            </summary>
            <param name="client">The client.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetToken(System.Net.Http.HttpClient,System.String,System.String)">
            <summary>
            Sets an authorization header with a given scheme and value.
            </summary>
            <param name="client">The client.</param>
            <param name="scheme">The scheme.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetBearerToken(System.Net.Http.HttpClient,System.String)">
            <summary>
            Sets an authorization header with a bearer token.
            </summary>
            <param name="client">The client.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetBasicAuthentication(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Sets a basic authentication header.
            </summary>
            <param name="request">The HTTP request message.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetBasicAuthenticationOAuth(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Sets a basic authentication header for RFC6749 client authentication.
            </summary>
            <param name="request">The HTTP request message.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetToken(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Sets an authorization header with a given scheme and value.
            </summary>
            <param name="request">The HTTP request message.</param>
            <param name="scheme">The scheme.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetBearerToken(System.Net.Http.HttpRequestMessage,System.String)">
            <summary>
            Sets an authorization header with a bearer token.
            </summary>
            <param name="request">The HTTP request message.</param>
            <param name="token">The token.</param>
        </member>
        <member name="M:IdentityModel.Client.AuthorizationHeaderExtensions.SetDPoPToken(System.Net.Http.HttpRequestMessage,System.String,System.String)">
            <summary>
            Sets an authorization header with a DPoP token, and the DPoP proof token header with a proof token.
            </summary>
            <param name="request">The HTTP request message.</param>
            <param name="accessToken">The access token.</param>
            <param name="proofToken">The proof token.</param>
        </member>
        <member name="T:IdentityModel.Client.HttpClientBackchannelAuthenticationExtensions">
            <summary>
            HttpClient extensions CIBA backchannel authentication
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientBackchannelAuthenticationExtensions.RequestBackchannelAuthenticationAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.BackchannelAuthenticationRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a CIBA backchannel authentication request
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientDeviceFlowExtensions">
            <summary>
            HttpClient extensions for OIDC userinfo
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientDeviceFlowExtensions.RequestDeviceAuthorizationAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.DeviceAuthorizationRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a userinfo request.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientDiscoveryExtensions">
            <summary>
            HttpClient extentions for OIDC discovery
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientDiscoveryExtensions.GetDiscoveryDocumentAsync(System.Net.Http.HttpClient,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a discovery document request
            </summary>
            <param name="client">The client.</param>
            <param name="address">The address.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientDiscoveryExtensions.GetDiscoveryDocumentAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.DiscoveryDocumentRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a discovery document request
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientDynamicRegistrationExtensions">
            <summary>
            HttpClient extensions for dynamic registration
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientDynamicRegistrationExtensions.RegisterClientAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.DynamicClientRegistrationRequest,System.Threading.CancellationToken)">
            <summary>
            Send a dynamic registration request.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientJsonWebKeySetExtensions">
            <summary>
            HttpClient extensions for OIDC discovery
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientJsonWebKeySetExtensions.GetJsonWebKeySetAsync(System.Net.Http.HttpMessageInvoker,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a JSON web key set document request
            </summary>
            <param name="client">The client.</param>
            <param name="address"></param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientJsonWebKeySetExtensions.GetJsonWebKeySetAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.JsonWebKeySetRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a JSON web key set document request
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientPushedAuthorizationExtensions">
            <summary>
            HttpClient extensions for OIDC discovery
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientPushedAuthorizationExtensions.PushAuthorizationAsync(System.Net.Http.HttpClient,IdentityModel.Client.PushedAuthorizationRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a pushed authorization request
            </summary>
            <param name="client">The HTTP client.</param>
            <param name="request"></param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientTokenIntrospectionExtensions">
            <summary>
            HttpClient extensions for OAuth token introspection
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenIntrospectionExtensions.IntrospectTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.TokenIntrospectionRequest,System.Threading.CancellationToken)">
            <summary>
            Sends an OAuth token introspection request.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientTokenRequestExtensions">
            <summary>
            HttpClient extensions for OAuth token requests
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestClientCredentialsTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.ClientCredentialsTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the client_credentials grant type.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestDeviceTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.DeviceTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the urn:ietf:params:oauth:grant-type:device_code grant type.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestPasswordTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.PasswordTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the password grant type.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestAuthorizationCodeTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.AuthorizationCodeTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the authorization_code grant type.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestRefreshTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.RefreshTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the refresh_token grant type.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestTokenExchangeTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.TokenExchangeTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token exchange request.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestBackchannelAuthenticationTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.BackchannelAuthenticationTokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the urn:openid:params:grant-type:ciba grant type.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.TokenRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a token request.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRequestExtensions.RequestTokenRawAsync(System.Net.Http.HttpMessageInvoker,System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Sends a token request.
            </summary>
            <param name="client">The client.</param>
            <param name="address">The address.</param>
            <param name="parameters">The parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">parameters</exception>
        </member>
        <member name="T:IdentityModel.Client.HttpClientTokenRevocationExtensions">
            <summary>
            HttpClient extensions for OAuth token revocation
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientTokenRevocationExtensions.RevokeTokenAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.TokenRevocationRequest,System.Threading.CancellationToken)">
            <summary>
            Sends an OAuth token revocation request.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.HttpClientUserInfoExtensions">
            <summary>
            HttpClient extensions for OIDC userinfo
            </summary>
        </member>
        <member name="M:IdentityModel.Client.HttpClientUserInfoExtensions.GetUserInfoAsync(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.UserInfoRequest,System.Threading.CancellationToken)">
            <summary>
            Sends a userinfo request.
            </summary>
            <param name="client">The client.</param>
            <param name="request">The request.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.JsonElementExtensions">
            <summary>
            Extensions for JObject
            </summary>
        </member>
        <member name="M:IdentityModel.Client.JsonElementExtensions.ToClaims(System.Text.Json.JsonElement,System.String,System.String[])">
            <summary>
            Converts a JSON claims object to a list of Claim
            </summary>
            <param name="json">The json.</param>
            <param name="issuer">Optional issuer name to add to claims.</param>
            <param name="excludeKeys">Claims that should be excluded.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.JsonElementExtensions.TryGetValue(System.Text.Json.JsonElement,System.String)">
            <summary>
            Tries to get a value from a JObject
            </summary>
            <param name="json">The json.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.JsonElementExtensions.TryGetInt(System.Text.Json.JsonElement,System.String)">
            <summary>
            Tries to get an int from a JObject
            </summary>
            <param name="json">The json.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.JsonElementExtensions.TryGetString(System.Text.Json.JsonElement,System.String)">
            <summary>
            Tries to get a string from a JObject
            </summary>
            <param name="json">The json.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.JsonElementExtensions.TryGetBoolean(System.Text.Json.JsonElement,System.String)">
            <summary>
            Tries to get a boolean from a JObject
            </summary>
            <param name="json">The json.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.JsonElementExtensions.TryGetStringArray(System.Text.Json.JsonElement,System.String)">
            <summary>
            Tries to get a string array from a JObject
            </summary>
            <param name="json">The json.</param>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.RequestUrlExtensions">
            <summary>
            Extensions for RequestUrl
            </summary>
        </member>
        <member name="M:IdentityModel.Client.RequestUrlExtensions.Create(IdentityModel.Client.RequestUrl,IdentityModel.Client.Parameters)">
            <summary>
            Creates an authorize URL.
            </summary>
            <param name="request">The request.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.RequestUrlExtensions.CreateAuthorizeUrl(IdentityModel.Client.RequestUrl,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Int32},System.String,System.String,System.String,IdentityModel.Client.Parameters)">
            <summary>
            Creates an authorize URL.
            </summary>
            <param name="request">The instance of the RequestUrl helper class.</param>
            <param name="clientId">The client identifier.</param>
            <param name="responseType">The response type.</param>
            <param name="scope">The scope.</param>
            <param name="redirectUri">The redirect URI.</param>
            <param name="state">The state.</param>
            <param name="nonce">The nonce.</param>
            <param name="loginHint">The login hint.</param>
            <param name="acrValues">The acr values.</param>
            <param name="prompt">The prompt.</param>
            <param name="responseMode">The response mode.</param>
            <param name="codeChallenge">The code challenge.</param>
            <param name="codeChallengeMethod">The code challenge method.</param>
            <param name="display">The display option.</param>
            <param name="maxAge">The max age.</param>
            <param name="uiLocales">The ui locales.</param>
            <param name="idTokenHint">The id_token hint.</param>
            <param name="requestUri">The request uri.</param>
            <param name="extra">Extra parameters.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.RequestUrlExtensions.CreateEndSessionUrl(IdentityModel.Client.RequestUrl,System.String,System.String,System.String,IdentityModel.Client.Parameters)">
            <summary>
            Creates a end_session URL.
            </summary>
            <param name="request">The request.</param>
            <param name="idTokenHint">The id_token hint.</param>
            <param name="postLogoutRedirectUri">The post logout redirect URI.</param>
            <param name="state">The state.</param>
            <param name="extra">The extra parameters.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.IAuthorityValidationStrategy">
            <summary>
            Authority validation strategy.
            </summary>
        </member>
        <member name="M:IdentityModel.Client.IAuthorityValidationStrategy.IsIssuerNameValid(System.String,System.String)">
            <summary>
            Validate issuer name found in Discovery Document.
            </summary>
            <param name="expectedAuthority">Authority expected.</param>
            <param name="issuerName">Authority declared in Discovery Document.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.IAuthorityValidationStrategy.IsEndpointValid(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Validate end point found in Discovery Document.
            </summary>
            <param name="expectedAuthority">Authority expected.</param>
            <param name="endpoint">Endpoint declared in Discovery Document.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.IDiscoveryCache">
            <summary>
            Interface for discovery cache
            </summary>
        </member>
        <member name="P:IdentityModel.Client.IDiscoveryCache.CacheDuration">
            <summary>
            Gets or sets the duration of the cache.
            </summary>
            <value>
            The duration of the cache.
            </value>
        </member>
        <member name="M:IdentityModel.Client.IDiscoveryCache.GetAsync">
            <summary>
            Retrieves the discovery document
            </summary>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.IDiscoveryCache.Refresh">
            <summary>
            Forces a refresh on the next get.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.IntrospectionClient">
            <summary>
            Client library for the OAuth 2 introspection endpoint
            </summary>
        </member>
        <member name="M:IdentityModel.Client.IntrospectionClient.#ctor(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.IntrospectionClientOptions)">
            <summary>
            ctor
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:IdentityModel.Client.IntrospectionClient.#ctor(System.Func{System.Net.Http.HttpMessageInvoker},IdentityModel.Client.IntrospectionClientOptions)">
            <summary>
            ctor
            </summary>
            <param name="client"></param>
            <param name="options"></param>
        </member>
        <member name="M:IdentityModel.Client.IntrospectionClient.ApplyRequestParameters(IdentityModel.Client.TokenIntrospectionRequest,IdentityModel.Client.Parameters)">
            <summary>
            Sets request parameters from the options.
            </summary>
            <param name="request">The request.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:IdentityModel.Client.IntrospectionClient.Introspect(System.String,System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Introspects a token
            </summary>
            <param name="token"></param>
            <param name="tokenTypeHint"></param>
            <param name="parameters"></param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.AuthorizationCodeTokenRequest">
            <summary>
            Request for token using authorization_code
            </summary>
            <seealso cref="T:IdentityModel.Client.TokenRequest" />
        </member>
        <member name="P:IdentityModel.Client.AuthorizationCodeTokenRequest.Code">
            <summary>
            Gets or sets the code.
            </summary>
            <value>
            The code.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizationCodeTokenRequest.RedirectUri">
            <summary>
            Gets or sets the redirect URI.
            </summary>
            <value>
            The redirect URI.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizationCodeTokenRequest.Resource">
            <summary>
            List of requested resources
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizationCodeTokenRequest.CodeVerifier">
            <summary>
            Gets or sets the code verifier.
            </summary>
            <value>
            The code verifier.
            </value>
        </member>
        <member name="T:IdentityModel.Client.AuthorizeResponse">
            <summary>
            Models the response of an authorize request
            </summary>
        </member>
        <member name="M:IdentityModel.Client.AuthorizeResponse.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.Client.AuthorizeResponse"/> class.
            </summary>
            <param name="raw">The raw response URL.</param>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.Raw">
            <summary>
            Gets the raw response URL.
            </summary>
            <value>
            The raw.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.Values">
            <summary>
            Gets the key/value pairs of the response.
            </summary>
            <value>
            The values.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.Code">
            <summary>
            Gets the authorization code.
            </summary>
            <value>
            The authorization code.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.IdentityToken">
            <summary>
            Gets the identity token.
            </summary>
            <value>
            The identity token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.Error">
            <summary>
            Gets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.TokenType">
            <summary>
            Gets the type of the token.
            </summary>
            <value>
            The type of the token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.State">
            <summary>
            Gets the state.
            </summary>
            <value>
            The state.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.SessionState">
            <summary>
            Gets the session state.
            </summary>
            <value>
            The session state.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.Issuer">
            <summary>
            Gets the issuer name.
            </summary>
            <value>
            The issuer name.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.ErrorDescription">
            <summary>
            Gets the error description.
            </summary>
            <value>
            The error description.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.IsError">
            <summary>
            Gets a value indicating whether the response is an error.
            </summary>
            <value>
              <c>true</c> if the response is an error; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdentityModel.Client.AuthorizeResponse.ExpiresIn">
            <summary>
            Gets the expires in.
            </summary>
            <value>
            The expires in.
            </value>
        </member>
        <member name="M:IdentityModel.Client.AuthorizeResponse.TryGet(System.String)">
            <summary>
            Tries the get a value.
            </summary>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.BackchannelAuthenticationRequest">
            <summary>
            Request for CIBA backchannel authentication
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolRequest" />
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.Scope">
            <summary>
            REQUIRED. The scope of the access request as described by Section 3.3 of RFC6749.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.ClientNotificationToken">
            <summary>
            REQUIRED if the Client is registered to use Ping or Push modes.
            It is a bearer token provided by the Client that will be used by the OpenID Provider to authenticate the callback request to the Client.
            The length of the token MUST NOT exceed 1024 characters and it MUST conform to the syntax for Bearer credentials as defined in Section 2.1 of RFC6750.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.AcrValues">
            <summary>
            OPTIONAL. Requested Authentication Context Class Reference values.
            A space-separated string that specifies the acr values that the OpenID Provider is being requested to use for processing this Authentication Request, with the values appearing in order of preference.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.LoginHintToken">
            <summary>
            OPTIONAL. A token containing information identifying the end-user for whom authentication is being requested.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.IdTokenHint">
            <summary>
            OPTIONAL. An ID Token previously issued to the Client by the OpenID Provider being passed back as a hint to identify the end-user for whom authentication is being requested.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.LoginHint">
            <summary>
            OPTIONAL. A hint to the OpenID Provider regarding the end-user for whom authentication is being requested.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.BindingMessage">
            <summary>
            OPTIONAL. A human-readable identifier or message intended to be displayed on both the consumption device and the authentication device to interlock them together for the transaction by way of a visual cue for the end-user.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.UserCode">
            <summary>
            OPTIONAL. A secret code, such as a password or pin, that is known only to the user but verifiable by the OP.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.RequestedExpiry">
            <summary>
            OPTIONAL. A positive integer allowing the client to request the expires_in value for the auth_req_id the server will return.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.RequestObject">
            <summary>
            OPTIONAL. A signed authentication request is made by encoding all of the authentication request parameters as claims of a signed JWT with each parameter name as the claim name and its value as a JSON string.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationRequest.Resource">
            <summary>
            List of requested resources
            </summary>
            <value>
            The resources.
            </value>
        </member>
        <member name="T:IdentityModel.Client.BackchannelAuthenticationResponse">
            <summary>
            Models a CIBA backchannel authentication response
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationResponse.AuthenticationRequestId">
            <summary>
            REQUIRED. This is a unique identifier to identify the authentication request made by the Client.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationResponse.ExpiresIn">
            <summary>
            REQUIRED. A JSON number with a positive integer value indicating the expiration time of the "auth_req_id" in seconds since the authentication request was received.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationResponse.Interval">
            <summary>
            OPTIONAL. A JSON number with a positive integer value indicating the minimum amount of time in seconds that the Client MUST wait between polling requests to the token endpoint.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.BackchannelAuthenticationTokenRequest">
            <summary>
            Request for token using urn:openid:params:grant-type:ciba grant type
            </summary>
            <seealso cref="T:IdentityModel.Client.TokenRequest" />
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationTokenRequest.AuthenticationRequestId">
            <summary>
            REQUIRED. It is the unique identifier to identify the authentication request (transaction) made by the Client.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.BackchannelAuthenticationTokenRequest.Resource">
            <summary>
            List of requested resources
            </summary>
            <value>
            The resources.
            </value>
        </member>
        <member name="T:IdentityModel.Client.ClientAssertion">
            <summary>
            Models a client assertion
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientAssertion.Type">
            <summary>
            Gets or sets the assertion type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientAssertion.Value">
            <summary>
            Gets or sets the assertion value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:IdentityModel.Client.ClientCredentialsTokenRequest">
            <summary>
            Request for token using client_credentials
            </summary>
            <seealso cref="T:IdentityModel.Client.TokenRequest" />
        </member>
        <member name="P:IdentityModel.Client.ClientCredentialsTokenRequest.Scope">
            <summary>
            Space separated list of the requested scopes 
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientCredentialsTokenRequest.Resource">
            <summary>
            List of requested resources
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.Boolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.NullableBoolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.DynamicClientRegistrationDocument">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.JsonWebKey">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.JsonWebKeySet">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.ICollectionUri">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.ICollectionString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.IDictionaryStringJsonElement">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.IListString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.ListJsonWebKey">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.JsonElement">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.Uri">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.NullableInt32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ClientMessagesSourceGenerationContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:IdentityModel.Client.ClientMessagesSourceGenerationContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IdentityModel.Client.ClientMessagesSourceGenerationContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:IdentityModel.Client.ClientMessagesSourceGenerationContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:IdentityModel.Client.DeviceAuthorizationRequest">
            <summary>
            Request for device authorization
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationRequest.Scope">
            <summary>
            Space separated list of the requested scopes (optional).
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="T:IdentityModel.Client.DeviceAuthorizationResponse">
            <summary>
            Models an OAuth device authorization response
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationResponse.DeviceCode">
            <summary>
            Gets the device verification code.
            </summary>
            <value>
            The device code.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationResponse.UserCode">
            <summary>
            Gets the end-user verification code.
            </summary>
            <value>
            The user code.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationResponse.VerificationUri">
            <summary>
            Gets the end-user verification URI on the authorization server.The URI should be short and easy to remember as end users will be asked to manually type it into their user-agent.
            </summary>
            <value>
            The verification URI.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationResponse.VerificationUriComplete">
            <summary>
            Gets the verification URI that includes the "user_code" (or other information with the same function as the "user_code"), designed for non-textual transmission.
            </summary>
            <value>
            The complete verification URI.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationResponse.ExpiresIn">
            <summary>
            Gets the lifetime in seconds of the "device_code" and "user_code".
            </summary>
            <value>
            The expires in.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationResponse.Interval">
            <summary>
            Gets the minimum amount of time in seconds that the client SHOULD wait between polling requests to the token endpoint. If no value is provided, clients MUST use 5 as the default.
            </summary>
            <value>
            The interval.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DeviceAuthorizationResponse.ErrorDescription">
            <summary>
            Gets the error description.
            </summary>
            <value>
            The error description.
            </value>
        </member>
        <member name="T:IdentityModel.Client.DeviceTokenRequest">
            <summary>
            Request for token using urn:ietf:params:oauth:grant-type:device_code
            </summary>
            <seealso cref="T:IdentityModel.Client.TokenRequest" />
        </member>
        <member name="P:IdentityModel.Client.DeviceTokenRequest.DeviceCode">
            <summary>
            Gets or sets the device code.
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="T:IdentityModel.Client.DiscoveryDocumentRequest">
            <summary>
            Request for OpenID Connect discovery document
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryDocumentRequest.Policy">
            <summary>
            Gets or sets the policy.
            </summary>
            <value>
            The policy.
            </value>
        </member>
        <member name="T:IdentityModel.Client.DiscoveryDocumentResponse">
            <summary>
            Models the response from an OpenID Connect discovery endpoint
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryDocumentResponse.KeySet">
            <summary>
            Gets or sets the JSON web key set.
            </summary>
            <value>
            The key set.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DiscoveryDocumentResponse.MtlsEndpointAliases">
            <summary>
            Gets the MTLS endpoint aliases
            </summary>
            <value>
            The key set.
            </value>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryDocumentResponse.ValidateIssuerName(System.String,System.String)">
            <summary>
            Checks if the issuer matches the authority.
            </summary>
            <param name="issuer">The issuer.</param>
            <param name="authority">The authority.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryDocumentResponse.ValidateIssuerName(System.String,System.String,System.StringComparison)">
            <summary>
            Checks if the issuer matches the authority.
            </summary>
            <param name="issuer">The issuer.</param>
            <param name="authority">The authority.</param>
            <param name="nameComparison">The comparison mechanism that should be used when performing the match.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryDocumentResponse.ValidateIssuerName(System.String,System.String,IdentityModel.Client.IAuthorityValidationStrategy)">
            <summary>
            Checks if the issuer matches the authority.
            </summary>
            <param name="issuer">The issuer.</param>
            <param name="authority">The authority.</param>
            <param name="validationStrategy">The strategy to use.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.DiscoveryDocumentResponse.ValidateEndpoints(System.Nullable{System.Text.Json.JsonElement},IdentityModel.Client.DiscoveryPolicy)">
            <summary>
            Validates the endoints and jwks_uri according to the security policy.
            </summary>
            <param name="json">The json.</param>
            <param name="policy">The policy.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.DynamicClientRegistrationDocument">
            <summary>
            Models an OpenID Connect dynamic client registration request.
            </summary>
            <remarks>
            <see href="https://datatracker.ietf.org/doc/html/rfc7591" /> and <see href="https://openid.net/specs/openid-connect-registration-1_0.html" />.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.RedirectUris">
            <summary>
            List of redirection URI strings for use in redirect-based flows such as the authorization code and implicit flows.
            </summary>
            <remarks>
            Clients using flows with redirection must register their redirection URI values.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.ResponseTypes">
            <summary>
            List of the OAuth 2.0 response type strings that the client can use at the authorization endpoint.
            </summary>
            <remarks>
            Example: "code" or "token".
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.GrantTypes">
            <summary>
            List of OAuth 2.0 grant type strings that the client can use at the token endpoint.
            </summary>
            <remarks>
            Example: "authorization_code", "implicit", "password", "client_credentials", "refresh_token".
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.ApplicationType">
            <summary>
            Kind of the application.
            </summary>
            <remarks>
            The defined values are "native" or "web".
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.Contacts">
            <summary>
            List of strings representing ways to contact people responsible for this client, typically email addresses.
            </summary>
            <remarks>
            The authorization server may make these contact addresses available to end-users for support requests for the client.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.ClientName">
            <summary>
            Human-readable string name of the client to be presented to the end-user during authorization.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.LogoUri">
            <summary>
            Logo for the client.
            </summary>
            <remarks>
            If present, the server should display this image to the end-user during approval.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.ClientUri">
            <summary>
            Web page providing information about the client.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.PolicyUri">
            <summary>
            Human-readable privacy policy document that describes how the deployment organization
            collects, uses, retains, and discloses personal data.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.TosUri">
            <summary>
            Human-readable terms of service document for the client that describes a contractual relationship
            between the end-user and the client that the end-user accepts when authorizing the client.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.JwksUri">
            <summary>
            JWK Set document which contains the client's public keys.
            </summary>
            <remarks>
            Use of this parameter is preferred over the "jwks" parameter, as it allows for easier key rotation.
            The <see cref="P:IdentityModel.Client.DynamicClientRegistrationDocument.JwksUri"/> and <see cref="P:IdentityModel.Client.DynamicClientRegistrationDocument.Jwks"/> parameters MUST NOT both be present in
            the same request or response.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.SectorIdentifierUri">
            <summary>
            URL using the https scheme to be used in calculating Pseudonymous Identifiers by the OpenID provider.
            </summary>
            <remarks>
            The URL references a file with a single JSON array of <c>redirect_uri</c> values. 
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.SubjectType">
            <remarks>
            Valid types include "pairwise" and "public".
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.Scope">
            <summary>
            String containing a space-separated list of scope values that the client can use when requesting access tokens.
            </summary>
            <remarks>
            If omitted, an authorization server may register a client with a default set of scopes.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.PostLogoutRedirectUris">
            <summary>
            List of post-logout redirection URIs for use in the end session
            endpoint.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.FrontChannelLogoutUri">
            <summary>
            RP URL that will cause the RP to log itself out when rendered in an
            iframe by the OP.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.FrontChannelLogoutSessionRequired">
            <summary>
            Boolean value specifying whether the RP requires that a sid (session ID)
            query parameter be included to identify the RP session with the OP when
            the frontchannel_logout_uri is used.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.BackChannelLogoutUri">
            <summary>
            RP URL that will cause the RP to log itself out when sent a Logout Token
            by the OP.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.BackchannelLogoutSessionRequired">
            <summary>
            Boolean value specifying whether the RP requires that a sid (session ID)
            Claim be included in the Logout Token to identify the RP session with
            the OP when the backchannel_logout_uri is used.e
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.SoftwareStatement">
            <summary>
            A software statement containing client metadata values about the client
            software as claims.  This is a string value containing the entire signed
            JWT.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.SoftwareId">
            <summary>
            A unique identifier string (e.g., a <see cref="T:System.Guid"/>) assigned by the client developer or software
            publisher used by registration endpoints to identify the client software to be dynamically registered.
            </summary>
            <remarks>
            The value of this field is not intended to be human readable and is usually opaque to the client and authorization server.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.SoftwareVersion">
            <summary>
            A version identifier string for the client software identified by <see cref="P:IdentityModel.Client.DynamicClientRegistrationDocument.SoftwareId"/>.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.RequireSignedRequestObject">
            <summary>
            Boolean value specifying whether authorization requests must be
            protected as signed request objects and provided through either the
            request or request_uri parameters.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.DefaultMaxAge">
            <summary>
            Default maximum authentication age.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.RequireAuthenticationTime">
            <summary>
            Whether the <c>auth_time</c> claim in the id token is required.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.DefaultAcrValues">
            <summary>
            Default requested Authentication Context Class Reference values.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.InitiateLoginUri">
            <summary>
            URI using the https scheme that a third party can use to initiate a
            login by the relying party.
            </summary>
            <remarks>
            The URI must accept requests via both GET and POST. The client must
            understand the <c>login_hint</c> and iss parameters and should support
            the <c>target_link_uri</c> parameter.
            </remarks>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.RequestUris">
            <summary>
            List of request URI values that are pre-registered by the relying party for use at the OpenID provider.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationDocument.Extensions">
            <summary>
            Custom client metadata fields to include in the serialization.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.DynamicClientRegistrationRequest">
            <summary>
            Request for dynamic client registration
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolRequest" />
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationRequest.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>
            The token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.DynamicClientRegistrationRequest.Document">
            <summary>
            Gets or sets the registration request.
            </summary>
            <value>
            The registration request.
            </value>
        </member>
        <member name="T:IdentityModel.Client.DynamicClientRegistrationResponse">
            <summary>
            Models an OpenID Connect dynamic client registration response
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="T:IdentityModel.Client.JsonWebKeySetRequest">
            <summary>
            Request for JSON web key set document
            </summary>
        </member>
        <member name="T:IdentityModel.Client.JsonWebKeySetResponse">
            <summary>
            Models a response from a JWK endpoint
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="M:IdentityModel.Client.JsonWebKeySetResponse.InitializeAsync(System.Object)">
            <summary>
            Initializes the key set
            </summary>
            <param name="initializationData"></param>
            <returns></returns>
        </member>
        <member name="P:IdentityModel.Client.JsonWebKeySetResponse.KeySet">
            <summary>
            The key set
            </summary>
        </member>
        <member name="T:IdentityModel.Client.MtlsEndpointAliases">
            <summary>
            MTLS endpoint aliases
            </summary>
        </member>
        <member name="P:IdentityModel.Client.MtlsEndpointAliases.Json">
            <summary>
            The raw JSON
            </summary>
        </member>
        <member name="M:IdentityModel.Client.MtlsEndpointAliases.#ctor(System.Nullable{System.Text.Json.JsonElement})">
            <summary>
            ctor
            </summary>
            <param name="json"></param>
        </member>
        <member name="P:IdentityModel.Client.MtlsEndpointAliases.TokenEndpoint">
            <summary>
            Returns the token endpoint address
            </summary>
        </member>
        <member name="P:IdentityModel.Client.MtlsEndpointAliases.RevocationEndpoint">
            <summary>
            Returns the revocation endpoint address
            </summary>
        </member>
        <member name="P:IdentityModel.Client.MtlsEndpointAliases.DeviceAuthorizationEndpoint">
            <summary>
            Returns the device authorization endpoint address
            </summary>
        </member>
        <member name="P:IdentityModel.Client.MtlsEndpointAliases.IntrospectionEndpoint">
            <summary>
            Returns the introspection endpoint address
            </summary>
        </member>
        <member name="T:IdentityModel.Client.ParameterReplaceBehavior">
            <summary>
            Specifies how parameter in the collection get replaced (or not).
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ParameterReplaceBehavior.None">
            <summary>
            Allow multiple
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ParameterReplaceBehavior.Single">
            <summary>
            Replace a single parameter with the same key
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ParameterReplaceBehavior.All">
            <summary>
            Replace all parameters with same key
            </summary>
        </member>
        <member name="T:IdentityModel.Client.Parameters">
            <summary>
            Models a list of request parameters
            </summary>
        </member>
        <member name="M:IdentityModel.Client.Parameters.FromObject(System.Object)">
            <summary>
            Turns anonymous type or dictionary in Parameters (mainly for backwards compatibility)
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.Parameters.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:IdentityModel.Client.Parameters.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            ctor
            </summary>
            <param name="values"></param>
        </member>
        <member name="M:IdentityModel.Client.Parameters.Add(System.String,System.String,IdentityModel.Client.ParameterReplaceBehavior)">
            <summary>
            Adds a key/value to the list
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value</param>
            <param name="parameterReplace">Replace behavior.</param>
        </member>
        <member name="P:IdentityModel.Client.Parameters.Item(System.String)">
            <summary>
            Get parameter value(s) based on name
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:IdentityModel.Client.Parameters.GetValues(System.String)">
            <summary>
            Get parameter values based on name
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.Parameters.ContainsKey(System.String)">
            <summary>
            Checks the existence of a parameter
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.Parameters.AddOptional(System.String,System.String,System.Boolean)">
            <summary>
            Adds a parameter if it has a value
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="allowDuplicates">Allow multiple values of the same parameter.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:IdentityModel.Client.Parameters.AddRequired(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Ensures that a required parameter is present, adding it if necessary.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="allowDuplicates">Allow multiple distinct values for a duplicated parameter key.</param>
            <param name="allowEmptyValue">Allow an empty value.</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:IdentityModel.Client.Parameters.Merge(IdentityModel.Client.Parameters)">
            <summary>
            Merge two parameter sets
            </summary>
            <param name="additionalValues"></param>
            <returns>Merged parameters</returns>
        </member>
        <member name="T:IdentityModel.Client.PasswordTokenRequest">
            <summary>
            Request for token using password
            </summary>
            <seealso cref="T:IdentityModel.Client.TokenRequest" />
        </member>
        <member name="P:IdentityModel.Client.PasswordTokenRequest.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:IdentityModel.Client.PasswordTokenRequest.Password">
            <summary>
            Gets or sets the password.
            </summary>
            <value>
            The password.
            </value>
        </member>
        <member name="P:IdentityModel.Client.PasswordTokenRequest.Scope">
            <summary>
            Space separated list of the requested scopes
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:IdentityModel.Client.PasswordTokenRequest.Resource">
            <summary>
            List of requested resources
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="T:IdentityModel.Client.ProtocolRequest">
            <summary>
            Models a base OAuth/OIDC request with client credentials
            </summary>
        </member>
        <member name="M:IdentityModel.Client.ProtocolRequest.#ctor">
            <summary>
            Initializes an the HTTP protocol request and sets the accept header to application/json
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.Address">
            <summary>
            Gets or sets the endpoint address (you can also set the RequestUri instead or leave blank to use the HttpClient base address).
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.ClientId">
            <summary>
            Gets or sets the client identifier.
            </summary>
            <value>
            The client identifier.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.ClientSecret">
            <summary>
            Gets or sets the client secret.
            </summary>
            <value>
            The client secret.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.ClientAssertion">
            <summary>
            Gets or sets the client assertion.
            </summary>
            <value>
            The assertion.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.ClientCredentialStyle">
            <summary>
            Gets or sets the client credential style (post body vs authorization header).
            </summary>
            <value>
            The client credential style.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.AuthorizationHeaderStyle">
            <summary>
            Gets or sets the basic authentication header style (classic HTTP vs OAuth 2).
            </summary>
            <value>
            The basic authentication header style.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.DPoPProofToken">
            <summary>
            The DPoP proof token to use on the token endpoint.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.ProtocolRequest.Parameters">
            <summary>
            Gets or sets additional protocol parameters.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="M:IdentityModel.Client.ProtocolRequest.Clone">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:IdentityModel.Client.ProtocolRequest.Clone``1">
            <summary>
            Clones this instance.
            </summary>
        </member>
        <member name="M:IdentityModel.Client.ProtocolRequest.Prepare">
            <summary>
            Applies protocol parameters to HTTP request
            </summary>
        </member>
        <member name="T:IdentityModel.Client.ProtocolResponse">
            <summary>
            A protocol response
            </summary>
        </member>
        <member name="M:IdentityModel.Client.ProtocolResponse.FromHttpResponseAsync``1(System.Net.Http.HttpResponseMessage,System.Object,System.Boolean)">
            <summary>
            Initializes a protocol response from an HTTP response
            </summary>
            <typeparam name="T">Specific protocol response type</typeparam>
            <param name="httpResponse">The HTTP response.</param>
            <param name="initializationData">The initialization data.</param>
            <param name="skipJson">Disables parsing of json</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.ProtocolResponse.FromException``1(System.Exception,System.String)">
            <summary>
            Initializes a protocol response from an exception
            </summary>
            <typeparam name="T"></typeparam>
            <param name="ex">The ex.</param>
            <param name="errorMessage">The error message.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.ProtocolResponse.InitializeAsync(System.Object)">
            <summary>
            Allows to initialize instance specific data.
            </summary>
            <param name="initializationData">The initialization data.</param>
            <returns></returns>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.HttpResponse">
            <summary>
            Gets the HTTP response.
            </summary>
            <value>
            The HTTP response.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.Raw">
            <summary>
            Gets the raw protocol response (if present).
            </summary>
            <value>
            The raw.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.Json">
            <summary>
            Gets the protocol response as JSON (if present).
            </summary>
            <value>
            The json.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.Exception">
            <summary>
            Gets the exception (if present).
            </summary>
            <value>
            The exception.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.IsError">
            <summary>
            Gets a value indicating whether an error occurred.
            </summary>
            <value>
              <c>true</c> if an error occurred; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.ErrorType">
            <summary>
            Gets the type of the error.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.ErrorMessage">
            <summary>
            Gets or sets an explicit error message.
            </summary>
            <value>
            The type of the error.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.HttpStatusCode">
            <summary>
            Gets the HTTP status code - or <c>0</c> when <see cref="P:IdentityModel.Client.ProtocolResponse.HttpResponse" /> is <see langword="null"/>.
            </summary>
            <value>
            The HTTP status code.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.HttpErrorReason">
            <summary>
            Gets the HTTP error reason - or <see langword="null"/> when <see cref="P:IdentityModel.Client.ProtocolResponse.HttpResponse" /> is <see langword="null"/>.
            </summary>
            <value>
            The HTTP error reason.
            </value>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.Error">
            <summary>
            Gets the error.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="M:IdentityModel.Client.ProtocolResponse.TryGet(System.String)">
            <summary>
            Tries to get a specific value from the JSON response.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="P:IdentityModel.Client.ProtocolResponse.DPoPNonce">
            <summary>
            The returned DPoP nonce header.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.PushedAuthorizationRequest">
            <summary>
            Models the parameters that can be pushed in a Pushed Authorization Request.
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolRequest" />
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.ResponseType">
            <summary>
            Gets or sets the response_type protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.Scope">
            <summary>
            Gets or sets the scope protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.RedirectUri">
            <summary>
            Gets or sets the redirect_uri protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.State">
            <summary>
            Gets or sets the state protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.Nonce">
            <summary>
            Gets or sets the nonce protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.LoginHint">
            <summary>
            Gets or sets the login_hint protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.AcrValues">
            <summary>
            Gets or sets the acr_values protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.Prompt">
            <summary>
            Gets or sets the prompt protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.ResponseMode">
            <summary>
            Gets or sets the response_mode protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.CodeChallenge">
            <summary>
            Gets or sets the code_challenge protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.CodeChallengeMethod">
            <summary>
            Gets or sets the code_challenge_method protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.Display">
            <summary>
            Gets or sets the display protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.MaxAge">
            <summary>
            Gets or sets the max_age protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.UiLocales">
            <summary>
            Gets or sets the ui_locales protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.IdTokenHint">
            <summary>
            Gets or sets the id_token_hint protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.Resource">
            <summary>
            Gets or sets the resource protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.DPoPKeyThumbprint">
            <summary>
            Gets or sets the dpop_jkt protocol parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationRequest.Request">
            <summary>
            Gets or sets the request protocol parameter.
            </summary>
        </member>
        <member name="M:IdentityModel.Client.PushedAuthorizationRequest.MergeInto(IdentityModel.Client.Parameters)">
            <summary>
            Copies properties from a request into a Parameters collection. 
            </summary>
            <param name="targetParameters">The parameters to copy into.</param>
        </member>
        <member name="T:IdentityModel.Client.PushedAuthorizationResponse">
            <summary>
            Models the response from a Pushed Authorization Request
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationResponse.ExpiresIn">
            <summary>
            A JSON number that represents the lifetime of the request URI in seconds
            as a positive integer. The request URI lifetime is at the discretion of
            the authorization server but will typically be relatively short (e.g.,
            between 5 and 600 seconds).
            </summary>
        </member>
        <member name="P:IdentityModel.Client.PushedAuthorizationResponse.RequestUri">
            <summary>
            The request URI corresponding to the authorization request posted. This URI
            is a single-use reference to the respective request data in the subsequent
            authorization request. The way the authorization process obtains the
            authorization request data is at the discretion of the authorization server
            and is out of scope of this specification. There is no need to make the
            authorization request data available to other parties via this URI.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.RefreshTokenRequest">
            <summary>
            Request for token using refresh_token
            </summary>
            <seealso cref="T:IdentityModel.Client.TokenRequest" />
        </member>
        <member name="P:IdentityModel.Client.RefreshTokenRequest.RefreshToken">
            <summary>
            Gets or sets the refresh token.
            </summary>
            <value>
            The refresh token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.RefreshTokenRequest.Scope">
            <summary>
            Space separated list of the requested scopes.  The Scope attribute cannot be used to extend the scopes granted by the resource owner
            </summary>
            <remarks>
            See https://datatracker.ietf.org/doc/html/rfc6749#section-6 for further detail on restrictions
            </remarks>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:IdentityModel.Client.RefreshTokenRequest.Resource">
            <summary>
            List of requested resources
            </summary>
            <value>
            The resources.
            </value>
        </member>
        <member name="T:IdentityModel.Client.ResponseErrorType">
            <summary>
            Various reasons for a protocol endpoint error
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ResponseErrorType.None">
            <summary>
            none
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ResponseErrorType.Protocol">
            <summary>
            protocol related - valid response, but some protocol level error.
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ResponseErrorType.Http">
            <summary>
            HTTP error - e.g. 404.
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ResponseErrorType.Exception">
            <summary>
            An exception occurred - exception while connecting to the endpoint, e.g. TLS problems.
            </summary>
        </member>
        <member name="F:IdentityModel.Client.ResponseErrorType.PolicyViolation">
            <summary>
            A policy violation - a configured policy was violated.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.TokenExchangeTokenRequest">
            <summary>
            Request for token using urn:ietf:params:oauth:grant-type:token-exchange
            </summary>
            <seealso cref="T:IdentityModel.Client.TokenRequest" />
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.Resource">
            <summary>
            OPTIONAL.  A URI that indicates the target service or resource.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.Audience">
            <summary>
            OPTIONAL.  The logical name of the target service where the client intends to use the requested security token.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.Scope">
            <summary>
            OPTIONAL. Space separated list of the requested scopes
            </summary>
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.RequestedTokenType">
            <summary>
            OPTIONAL.  An identifier for the type of the requested security token.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.SubjectToken">
            <summary>
            REQUIRED.  A security token that represents the identity of the party on behalf of whom the request is being made.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.SubjectTokenType">
            <summary>
            REQUIRED.  An identifier that indicates the type of the security token in the "subject_token" parameter.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.ActorToken">
            <summary>
            OPTIONAL.  A security token that represents the identity of the acting party.
            </summary>
        </member>
        <member name="P:IdentityModel.Client.TokenExchangeTokenRequest.ActorTokenType">
            <summary>
            An identifier that indicates the type of the security token in the "actor_token" parameter. This is REQUIRED when the "actor_token" parameter is present in the request but MUST NOT be included otherwise.
            </summary>
        </member>
        <member name="T:IdentityModel.Client.TokenIntrospectionRequest">
            <summary>
            Request for OAuth token introspection
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolRequest" />
        </member>
        <member name="P:IdentityModel.Client.TokenIntrospectionRequest.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>
            The token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenIntrospectionRequest.TokenTypeHint">
            <summary>
            Gets or sets the token type hint.
            </summary>
            <value>
            The token type hint.
            </value>
        </member>
        <member name="T:IdentityModel.Client.TokenIntrospectionResponse">
            <summary>
            Models an OAuth 2.0 introspection response
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="M:IdentityModel.Client.TokenIntrospectionResponse.InitializeAsync(System.Object)">
            <summary>
            Allows to initialize instance specific data.
            </summary>
            <param name="initializationData">The initialization data.</param>
            <returns></returns>
        </member>
        <member name="P:IdentityModel.Client.TokenIntrospectionResponse.IsActive">
            <summary>
            Gets a value indicating whether the token is active.
            </summary>
            <value>
              <c>true</c> if the token is active; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenIntrospectionResponse.Claims">
            <summary>
            Gets the claims.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="T:IdentityModel.Client.TokenRequest">
            <summary>
            Request for token
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolRequest" />
        </member>
        <member name="P:IdentityModel.Client.TokenRequest.GrantType">
            <summary>
            Gets or sets the type of the grant.
            </summary>
            <value>
            The type of the grant.
            </value>
        </member>
        <member name="T:IdentityModel.Client.TokenResponse">
            <summary>
            Models a response from an OpenID Connect/OAuth 2 token endpoint
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.AccessToken">
            <summary>
            Gets the access token.
            </summary>
            <value>
            The access token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.IdentityToken">
            <summary>
            Gets the identity token.
            </summary>
            <value>
            The identity token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.Scope">
            <summary>
            Gets the scope.
            </summary>
            <value>
            The scope.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.IssuedTokenType">
            <summary>
            Gets the issued token type.
            </summary>
            <value>
            The issued token type.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.TokenType">
            <summary>
            Gets the type of the token.
            </summary>
            <value>
            The type of the token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.RefreshToken">
            <summary>
            Gets the refresh token.
            </summary>
            <value>
            The refresh token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.ErrorDescription">
            <summary>
            Gets the error description.
            </summary>
            <value>
            The error description.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenResponse.ExpiresIn">
            <summary>
            Gets the expires in.
            </summary>
            <value>
            The expires in.
            </value>
        </member>
        <member name="T:IdentityModel.Client.TokenRevocationRequest">
            <summary>
            Request for OAuth token revocation
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolRequest" />
        </member>
        <member name="P:IdentityModel.Client.TokenRevocationRequest.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>
            The token.
            </value>
        </member>
        <member name="P:IdentityModel.Client.TokenRevocationRequest.TokenTypeHint">
            <summary>
            Gets or sets the token type hint.
            </summary>
            <value>
            The token type hint.
            </value>
        </member>
        <member name="T:IdentityModel.Client.TokenRevocationResponse">
            <summary>
            Models an OAuth 2.0 token revocation response
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="T:IdentityModel.Client.UserInfoRequest">
            <summary>
            Request for OIDC userinfo
            </summary>
        </member>
        <member name="P:IdentityModel.Client.UserInfoRequest.Token">
            <summary>
            Gets or sets the token.
            </summary>
            <value>
            The token.
            </value>
        </member>
        <member name="T:IdentityModel.Client.UserInfoResponse">
            <summary>
            Models an OpenID Connect userinfo response
            </summary>
            <seealso cref="T:IdentityModel.Client.ProtocolResponse" />
        </member>
        <member name="M:IdentityModel.Client.UserInfoResponse.InitializeAsync(System.Object)">
            <summary>
            Allows to initialize instance specific data.
            </summary>
            <param name="initializationData">The initialization data.</param>
            <returns></returns>
        </member>
        <member name="P:IdentityModel.Client.UserInfoResponse.Claims">
            <summary>
            Gets the claims.
            </summary>
            <value>
            The claims.
            </value>
        </member>
        <member name="T:IdentityModel.Client.RequestUrl">
            <summary>
            Helper class for creating request URLs
            </summary>
        </member>
        <member name="M:IdentityModel.Client.RequestUrl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.Client.RequestUrl"/> class.
            </summary>
            <param name="baseUrl">The authorize endpoint.</param>
        </member>
        <member name="M:IdentityModel.Client.RequestUrl.Create(IdentityModel.Client.Parameters)">
            <summary>
            Creates URL based on key/value input pairs.
            </summary>
            <param name="parameters">The query string parameters.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.StringComparisonAuthorityValidationStrategy">
            <summary>
            Implementation of <see cref="T:IdentityModel.Client.IAuthorityValidationStrategy"/> based on <see cref="T:System.StringComparison"/>.
            </summary>
            <seealso cref="T:IdentityModel.Client.AuthorityUrlValidationStrategy"/>
        </member>
        <member name="M:IdentityModel.Client.StringComparisonAuthorityValidationStrategy.#ctor(System.StringComparison)">
            <summary>
            Constructor with <see cref="T:System.StringComparison"/> argument.
            </summary>
            <param name="stringComparison"></param>
        </member>
        <member name="M:IdentityModel.Client.StringComparisonAuthorityValidationStrategy.IsIssuerNameValid(System.String,System.String)">
            <summary>
            String comparison between issuer and authority (trailing slash ignored).
            </summary>
            <param name="issuerName"></param>
            <param name="expectedAuthority"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.StringComparisonAuthorityValidationStrategy.IsEndpointValid(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            String "starts with" comparison between endpoint and allowed authorities.
            </summary>
            <param name="endpoint"></param>
            <param name="allowedAuthorities"></param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.Client.TokenClient">
            <summary>
            Client library for the OpenID Connect / OAuth 2 token endpoint
            </summary>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.#ctor(System.Net.Http.HttpMessageInvoker,IdentityModel.Client.TokenClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.Client.TokenClient"/> class.
            </summary>
            <param name="client">The client.</param>
            <param name="options">The options.</param>
            <exception cref="T:System.ArgumentNullException">client</exception>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.#ctor(System.Func{System.Net.Http.HttpMessageInvoker},IdentityModel.Client.TokenClientOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.Client.TokenClient"/> class.
            </summary>
            <param name="client">The client func.</param>
            <param name="options">The options.</param>
            <exception cref="T:System.ArgumentNullException">client</exception>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.ApplyRequestParameters(IdentityModel.Client.TokenRequest,IdentityModel.Client.Parameters)">
            <summary>
            Sets request parameters from the options.
            </summary>
            <param name="request">The request.</param>
            <param name="parameters">The parameters.</param>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.RequestClientCredentialsTokenAsync(System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the client_credentials grant type.
            </summary>
            <param name="scope">The scope (space separated string).</param>
            <param name="parameters">Extra parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.RequestDeviceTokenAsync(System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the urn:ietf:params:oauth:grant-type:device_code grant type.
            </summary>
            <param name="deviceCode">The device code.</param>
            <param name="parameters">Extra parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.RequestPasswordTokenAsync(System.String,System.String,System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the password grant type.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="scope">The scope (space separated string).</param>
            <param name="parameters">Extra parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.RequestAuthorizationCodeTokenAsync(System.String,System.String,System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the authorization_code grant type.
            </summary>
            <param name="code">The code.</param>
            <param name="redirectUri">The redirect URI.</param>
            <param name="codeVerifier">The code verifier.</param>
            <param name="parameters">The parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.RequestRefreshTokenAsync(System.String,System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Sends a token request using the refresh_token grant type.
            </summary>
            <param name="refreshToken">The refresh token.</param>
            <param name="scope">The scope (space separated string).</param>
            <param name="parameters">Extra parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Client.TokenClient.RequestTokenAsync(System.String,IdentityModel.Client.Parameters,System.Threading.CancellationToken)">
            <summary>
            Sends a token request.
            </summary>
            <param name="grantType">Type of the grant.</param>
            <param name="parameters">Extra parameters.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.CryptoRandom">
            <summary>
            A class that mimics the standard Random class in the .NET Framework - but uses a random number generator internally.
            </summary>
        </member>
        <member name="T:IdentityModel.CryptoRandom.OutputFormat">
            <summary>
            Output format for unique IDs
            </summary>
        </member>
        <member name="F:IdentityModel.CryptoRandom.OutputFormat.Base64Url">
            <summary>
            URL-safe Base64
            </summary>
        </member>
        <member name="F:IdentityModel.CryptoRandom.OutputFormat.Base64">
            <summary>
            Base64
            </summary>
        </member>
        <member name="F:IdentityModel.CryptoRandom.OutputFormat.Hex">
            <summary>
            Hex
            </summary>
        </member>
        <member name="M:IdentityModel.CryptoRandom.CreateRandomKey(System.Int32)">
            <summary>
            Creates a random key byte array.
            </summary>
            <param name="length">The length.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.CryptoRandom.CreateUniqueId(System.Int32,IdentityModel.CryptoRandom.OutputFormat)">
            <summary>
            Creates a URL safe unique identifier.
            </summary>
            <param name="length">The length.</param>
            <param name="format">The output format</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.CryptoRandom.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.CryptoRandom"/> class.
            </summary>
        </member>
        <member name="M:IdentityModel.CryptoRandom.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:IdentityModel.CryptoRandom"/> class.
            </summary>
            <param name="ignoredSeed">seed (ignored)</param>
        </member>
        <member name="M:IdentityModel.CryptoRandom.Next">
            <summary>
            Returns a nonnegative random number.
            </summary>
            <returns>
            A 32-bit signed integer greater than or equal to zero and less than <see cref="F:System.Int32.MaxValue"/>.
            </returns>
        </member>
        <member name="M:IdentityModel.CryptoRandom.Next(System.Int32)">
            <summary>
            Returns a nonnegative random number less than the specified maximum.
            </summary>
            <param name="maxValue">The exclusive upper bound of the random number to be generated. <paramref name="maxValue"/> must be greater than or equal to zero.</param>
            <returns>
            A 32-bit signed integer greater than or equal to zero, and less than <paramref name="maxValue"/>; that is, the range of return values ordinarily includes zero but not <paramref name="maxValue"/>. However, if <paramref name="maxValue"/> equals zero, <paramref name="maxValue"/> is returned.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="maxValue"/> is less than zero.
            </exception>
        </member>
        <member name="M:IdentityModel.CryptoRandom.Next(System.Int32,System.Int32)">
            <summary>
            Returns a random number within a specified range.
            </summary>
            <param name="minValue">The inclusive lower bound of the random number returned.</param>
            <param name="maxValue">The exclusive upper bound of the random number returned. <paramref name="maxValue"/> must be greater than or equal to <paramref name="minValue"/>.</param>
            <returns>
            A 32-bit signed integer greater than or equal to <paramref name="minValue"/> and less than <paramref name="maxValue"/>; that is, the range of return values includes <paramref name="minValue"/> but not <paramref name="maxValue"/>. If <paramref name="minValue"/> equals <paramref name="maxValue"/>, <paramref name="minValue"/> is returned.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            	<paramref name="minValue"/> is greater than <paramref name="maxValue"/>.
            </exception>
        </member>
        <member name="M:IdentityModel.CryptoRandom.NextDouble">
            <summary>
            Returns a random number between 0.0 and 1.0.
            </summary>
            <returns>
            A double-precision floating point number greater than or equal to 0.0, and less than 1.0.
            </returns>
        </member>
        <member name="M:IdentityModel.CryptoRandom.NextBytes(System.Byte[])">
            <summary>
            Fills the elements of a specified array of bytes with random numbers.
            </summary>
            <param name="buffer">An array of bytes to contain random numbers.</param>
            <exception cref="T:System.ArgumentNullException">
            	<paramref name="buffer"/> is null.
            </exception>
        </member>
        <member name="T:IdentityModel.DateTimeExtensions">
            <summary>
            Extensions for converting epoch/unix time to DateTime and DateTimeOffset
            </summary>
        </member>
        <member name="M:IdentityModel.DateTimeExtensions.ToEpochTime(System.DateTime)">
            <summary>
            Converts the given date value to epoch time.
            </summary>
        </member>
        <member name="M:IdentityModel.DateTimeExtensions.ToDateTimeFromEpoch(System.Int64)">
            <summary>
            Converts the given epoch time to a <see cref="T:System.DateTime"/> with <see cref="F:System.DateTimeKind.Utc"/> kind.
            </summary>
        </member>
        <member name="T:IdentityModel.Identity">
            <summary>
            Helpers to create ClaimsIdentity
            </summary>
        </member>
        <member name="P:IdentityModel.Identity.Anonymous">
            <summary>
            Creates an anonymous claims identity.
            </summary>
            <value>
            The anonymous.
            </value>
        </member>
        <member name="M:IdentityModel.Identity.Create(System.String,System.Security.Claims.Claim[])">
            <summary>
            Creates a ClaimsIdentity using the specified authentication type and claims.
            </summary>
            <param name="authenticationType">Type of the authentication.</param>
            <param name="claims">The claims.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Identity.CreateFromCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean)">
            <summary>
            Creates a ClaimsIdentity based on information found in an X509 certificate.
            </summary>
            <param name="certificate">The certificate.</param>
            <param name="authenticationType">Type of the authentication.</param>
            <param name="includeAllClaims">if set to <c>true</c> [include all claims].</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Internal.QueryHelpers.AddQueryString(System.String,System.String,System.String)">
            <summary>
            Append the given query key and value to the URI.
            </summary>
            <param name="uri">The base URI.</param>
            <param name="name">The name of the query key.</param>
            <param name="value">The query value.</param>
            <returns>The combined result.</returns>
        </member>
        <member name="M:IdentityModel.Internal.QueryHelpers.AddQueryString(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Append the given query keys and values to the uri.
            </summary>
            <param name="uri">The base uri.</param>
            <param name="queryString">A collection of name value query pairs to append.</param>
            <returns>The combined result.</returns>
        </member>
        <member name="T:IdentityModel.Internal.TaskHelpers">
            <summary>
            Helpers to deal with tasks.
            </summary>
        </member>
        <member name="P:IdentityModel.Internal.TaskHelpers.CanConfigureAwaitFalse">
            <summary>
            Gets or sets if this library's internal tasks can call ConfigureAwait(false).
            </summary>
        </member>
        <member name="P:IdentityModel.Internal.TaskHelpers.CanFactoryStartNew">
            <summary>
            Gets or sets if this library's internal tasks can call <see cref="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)"/>.
            </summary>
        </member>
        <member name="T:IdentityModel.Jwk.JsonWebAlgorithmsKeyTypes">
            <summary>
            Constants for JsonWebAlgorithms  "kty" Key Type (sec 6.1)
            http://tools.ietf.org/html/rfc7518#section-6.1
            </summary>
        </member>
        <member name="T:IdentityModel.Jwk.JsonWebKey">
            <summary>
            Represents a Json Web Key as defined in http://tools.ietf.org/html/rfc7517.
            </summary>
        </member>
        <member name="M:IdentityModel.Jwk.JsonWebKey.#ctor">
            <summary>
            Initializes an new instance of <see cref="T:IdentityModel.Jwk.JsonWebKey"/>.
            </summary>
        </member>
        <member name="M:IdentityModel.Jwk.JsonWebKey.#ctor(System.String)">
            <summary>
            Initializes an new instance of <see cref="T:IdentityModel.Jwk.JsonWebKey"/> from a json string.
            </summary>
            <param name="json">a string that contains JSON Web Key parameters in JSON format.</param>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Alg">
            <summary>
            Gets or sets the 'alg' (KeyType)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Crv">
            <summary>
            Gets or sets the 'crv' (ECC - Curve)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.D">
            <summary>
            Gets or sets the 'd' (ECC - Private Key OR RSA - Private Exponent)..
            </summary>
            <remarks> value is formated as: Base64urlUInt</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.DP">
            <summary>
            Gets or sets the 'dp' (RSA - First Factor CRT Exponent)..
            </summary>
            <remarks> value is formated as: Base64urlUInt</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.DQ">
            <summary>
            Gets or sets the 'dq' (RSA - Second Factor CRT Exponent)..
            </summary>
            <remarks> value is formated as: Base64urlUInt</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.E">
            <summary>
            Gets or sets the 'e' (RSA - Exponent)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.K">
            <summary>
            Gets or sets the 'k' (Symmetric - Key Value)..
            </summary>
            Base64urlEncoding
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.KeyOps">
            <summary>
            Gets or sets the 'key_ops' (Key Operations)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Kid">
            <summary>
            Gets or sets the 'kid' (Key ID)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Kty">
            <summary>
            Gets or sets the 'kty' (Key Type)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.N">
            <summary>
            Gets or sets the 'n' (RSA - Modulus)..
            </summary>
            <remarks> value is formated as: Base64urlEncoding</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Oth">
            <summary>
            Gets or sets the 'oth' (RSA - Other Primes Info)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.P">
            <summary>
            Gets or sets the 'p' (RSA - First Prime Factor)..
            </summary>
            <remarks> value is formated as: Base64urlUInt</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Q">
            <summary>
            Gets or sets the 'q' (RSA - Second  Prime Factor)..
            </summary>
            <remarks> value is formated as: Base64urlUInt</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.QI">
            <summary>
            Gets or sets the 'qi' (RSA - First CRT Coefficient)..
            </summary>
            <remarks> value is formated as: Base64urlUInt</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Use">
            <summary>
            Gets or sets the 'use' (Public Key Use)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.X">
            <summary>
            Gets or sets the 'x' (ECC - X Coordinate)..
            </summary>
            <remarks> value is formated as: Base64urlEncoding</remarks>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.X5c">
            <summary>
            Gets the 'x5c' collection (X.509 Certificate Chain)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.X5t">
            <summary>
            Gets or sets the 'x5t' (X.509 Certificate SHA-1 thumbprint)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.X5tS256">
            <summary>
            Gets or sets the 'x5t#S256' (X.509 Certificate SHA-1 thumbprint)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.X5u">
            <summary>
            Gets or sets the 'x5u' (X.509 URL)..
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKey.Y">
            <summary>
            Gets or sets the 'y' (ECC - Y Coordinate)..
            </summary>
            <remarks> value is formated as: Base64urlEncoding</remarks>
        </member>
        <member name="T:IdentityModel.Jwk.JsonWebKeyParameterNames">
            <summary>
            Names for Json Web Key Values
            </summary>
        </member>
        <member name="T:IdentityModel.Jwk.JsonWebKeySet">
            <summary>
            Contains a collection of <see cref="T:IdentityModel.Jwk.JsonWebKey"/> that can be populated from a json string.
            </summary>
        </member>
        <member name="M:IdentityModel.Jwk.JsonWebKeySet.#ctor">
            <summary>
            Initializes an new instance of <see cref="T:IdentityModel.Jwk.JsonWebKeySet"/>.
            </summary>
        </member>
        <member name="M:IdentityModel.Jwk.JsonWebKeySet.#ctor(System.String)">
            <summary>
            Initializes an new instance of <see cref="T:IdentityModel.Jwk.JsonWebKeySet"/> from a json string.
            </summary>
            <param name="json">a json string containing values.</param>
            <exception cref="T:System.InvalidOperationException">if web keys are malformed</exception>
            <exception cref="T:System.ArgumentNullException">if 'json' is null or whitespace.</exception>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKeySet.Keys">
            <summary>
            A list of JSON web keys
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JsonWebKeySet.RawData">
            <summary>
            The JSON string used to deserialize this object
            </summary>
        </member>
        <member name="T:IdentityModel.Jwk.JsonWebKeyExtensions">
            <summary>
            Extensions for JsonWebKey
            </summary>
        </member>
        <member name="M:IdentityModel.Jwk.JsonWebKeyExtensions.ToJwkString(IdentityModel.Jwk.JsonWebKey)">
            <summary>
            Converts a JSON web key to a URL safe string.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.Boolean">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.JsonWebKey">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.JsonWebKeySet">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.IListString">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.ListJsonWebKey">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.Int32">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.String">
            <summary>
            Defines the source generated JSON serialization contract metadata for a given type.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.Default">
            <summary>
            The default <see cref="T:System.Text.Json.Serialization.JsonSerializerContext"/> associated with a default <see cref="T:System.Text.Json.JsonSerializerOptions"/> instance.
            </summary>
        </member>
        <member name="P:IdentityModel.Jwk.JwkSourceGenerationContext.GeneratedSerializerOptions">
            <summary>
            The source-generated options associated with this context.
            </summary>
        </member>
        <member name="M:IdentityModel.Jwk.JwkSourceGenerationContext.#ctor">
            <inheritdoc/>
        </member>
        <member name="M:IdentityModel.Jwk.JwkSourceGenerationContext.#ctor(System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:IdentityModel.Jwk.JwkSourceGenerationContext.GetTypeInfo(System.Type)">
            <inheritdoc/>
        </member>
        <member name="T:IdentityModel.JwtClaimTypes">
            <summary>
            Commonly used claim types
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Subject">
            <summary>Unique Identifier for the End-User at the Issuer.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Name">
            <summary>End-User's full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the End-User's locale and preferences.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.GivenName">
            <summary>Given name(s) or first name(s) of the End-User. Note that in some cultures, people can have multiple given names; all can be present, with the names being separated by space characters.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.FamilyName">
            <summary>Surname(s) or last name(s) of the End-User. Note that in some cultures, people can have multiple family names or no family name; all can be present, with the names being separated by space characters.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.MiddleName">
            <summary>Middle name(s) of the End-User. Note that in some cultures, people can have multiple middle names; all can be present, with the names being separated by space characters. Also note that in some cultures, middle names are not used.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.NickName">
            <summary>Casual name of the End-User that may or may not be the same as the given_name. For instance, a nickname value of Mike might be returned alongside a given_name value of Michael.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.PreferredUserName">
            <summary>Shorthand name by which the End-User wishes to be referred to at the RP, such as janedoe or j.doe. This value MAY be any valid JSON string including special characters such as @, /, or whitespace. The relying party MUST NOT rely upon this value being unique</summary>
            <remarks>The RP MUST NOT rely upon this value being unique, as discussed in http://openid.net/specs/openid-connect-basic-1_0-32.html#ClaimStability </remarks>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Profile">
            <summary>URL of the End-User's profile page. The contents of this Web page SHOULD be about the End-User.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Picture">
            <summary>URL of the End-User's profile picture. This URL MUST refer to an image file (for example, a PNG, JPEG, or GIF image file), rather than to a Web page containing an image.</summary>
            <remarks>Note that this URL SHOULD specifically reference a profile photo of the End-User suitable for displaying when describing the End-User, rather than an arbitrary photo taken by the End-User.</remarks>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.WebSite">
            <summary>URL of the End-User's Web page or blog. This Web page SHOULD contain information published by the End-User or an organization that the End-User is affiliated with.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Email">
            <summary>End-User's preferred e-mail address. Its value MUST conform to the RFC 5322 [RFC5322] addr-spec syntax. The relying party MUST NOT rely upon this value being unique</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.EmailVerified">
            <summary>"true" if the End-User's e-mail address has been verified; otherwise "false".</summary>
             <remarks>When this Claim Value is "true", this means that the OP took affirmative steps to ensure that this e-mail address was controlled by the End-User at the time the verification was performed. The means by which an e-mail address is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating.</remarks>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Gender">
            <summary>End-User's gender. Values defined by this specification are "female" and "male". Other values MAY be used when neither of the defined values are applicable.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.BirthDate">
            <summary>End-User's birthday, represented as an ISO 8601:2004 [ISO8601‑2004] YYYY-MM-DD format. The year MAY be 0000, indicating that it is omitted. To represent only the year, YYYY format is allowed. Note that depending on the underlying platform's date related function, providing just year can result in varying month and day, so the implementers need to take this factor into account to correctly process the dates.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.ZoneInfo">
            <summary>String from the time zone database (https://data.iana.org/time-zones/tz-link.html) representing the End-User's time zone. For example, Europe/Paris or America/Los_Angeles.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Locale">
            <summary>End-User's locale, represented as a BCP47 [RFC5646] language tag. This is typically an ISO 639-1 Alpha-2 [ISO639‑1] language code in lowercase and an ISO 3166-1 Alpha-2 [ISO3166‑1] country code in uppercase, separated by a dash. For example, en-US or fr-CA. As a compatibility note, some implementations have used an underscore as the separator rather than a dash, for example, en_US; Relying Parties MAY choose to accept this locale syntax as well.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.PhoneNumber">
            <summary>End-User's preferred telephone number. E.164 (https://www.itu.int/rec/T-REC-E.164/e) is RECOMMENDED as the format of this Claim, for example, +1 (425) 555-1212 or +56 (2) 687 2400. If the phone number contains an extension, it is RECOMMENDED that the extension be represented using the RFC 3966 [RFC3966] extension syntax, for example, +1 (604) 555-1234;ext=5678.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.PhoneNumberVerified">
            <summary>True if the End-User's phone number has been verified; otherwise false. When this Claim Value is true, this means that the OP took affirmative steps to ensure that this phone number was controlled by the End-User at the time the verification was performed.</summary>
            <remarks>The means by which a phone number is verified is context-specific, and dependent upon the trust framework or contractual agreements within which the parties are operating. When true, the phone_number Claim MUST be in E.164 format and any extensions MUST be represented in RFC 3966 format.</remarks>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Address">
            <summary>End-User's preferred postal address. The value of the address member is a JSON structure containing some or all of the members defined in http://openid.net/specs/openid-connect-basic-1_0-32.html#AddressClaim </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Audience">
            <summary>Audience(s) that this ID Token is intended for. It MUST contain the OAuth 2.0 client_id of the Relying Party as an audience value. It MAY also contain identifiers for other audiences. In the general case, the aud value is an array of case sensitive strings. In the common special case when there is one audience, the aud value MAY be a single case sensitive string.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Issuer">
            <summary>Issuer Identifier for the Issuer of the response. The iss value is a case sensitive URL using the https scheme that contains scheme, host, and optionally, port number and path components and no query or fragment components.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.NotBefore">
            <summary>The time before which the JWT MUST NOT be accepted for processing, specified as the number of seconds from 1970-01-01T0:0:0Z</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Expiration">
            <summary>The exp (expiration time) claim identifies the expiration time on or after which the token MUST NOT be accepted for processing, specified as the number of seconds from 1970-01-01T0:0:0Z</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.UpdatedAt">
            <summary>Time the End-User's information was last updated. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.IssuedAt">
            <summary>The iat (issued at) claim identifies the time at which the JWT was issued, , specified as the number of seconds from 1970-01-01T0:0:0Z</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.AuthenticationMethod">
            <summary>Authentication Methods References. JSON array of strings that are identifiers for authentication methods used in the authentication.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.SessionId">
            <summary>Session identifier. This represents a Session of an OP at an RP to a User Agent or device for a logged-in End-User. Its contents are unique to the OP and opaque to the RP.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.AuthenticationContextClassReference">
            <summary>
            Authentication Context Class Reference. String specifying an Authentication Context Class Reference value that identifies the Authentication Context Class that the authentication performed satisfied. 
            The value "0" indicates the End-User authentication did not meet the requirements of ISO/IEC 29115 level 1. 
            Authentication using a long-lived browser cookie, for instance, is one example where the use of "level 0" is appropriate. 
            Authentications with level 0 SHOULD NOT be used to authorize access to any resource of any monetary value.
             (This corresponds to the OpenID 2.0 PAPE nist_auth_level 0.) 
            An absolute URI or an RFC 6711 registered name SHOULD be used as the acr value; registered names MUST NOT be used with a different meaning than that which is registered. 
            Parties using this claim will need to agree upon the meanings of the values used, which may be context-specific. 
            The acr value is a case sensitive string.
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.AuthenticationTime">
            <summary>Time when the End-User authentication occurred. Its value is a JSON number representing the number of seconds from 1970-01-01T0:0:0Z as measured in UTC until the date/time. When a max_age request is made or when auth_time is requested as an Essential Claim, then this Claim is REQUIRED; otherwise, its inclusion is OPTIONAL.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.AuthorizedParty">
            <summary>The party to which the ID Token was issued. If present, it MUST contain the OAuth 2.0 Client ID of this party. This Claim is only needed when the ID Token has a single audience value and that audience is different than the authorized party. It MAY be included even when the authorized party is the same as the sole audience. The azp value is a case sensitive string containing a StringOrURI value.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.AccessTokenHash">
            <summary> Access Token hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the access_token value, where the hash algorithm used is the hash algorithm used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is RS256, hash the access_token value with SHA-256, then take the left-most 128 bits and base64url encode them. The at_hash value is a case sensitive string.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.AuthorizationCodeHash">
            <summary>Code hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the code value, where the hash algorithm used is the hash algorithm used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is HS512, hash the code value with SHA-512, then take the left-most 256 bits and base64url encode them. The c_hash value is a case sensitive string.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.StateHash">
            <summary>State hash value. Its value is the base64url encoding of the left-most half of the hash of the octets of the ASCII representation of the state value, where the hash algorithm used is the hash algorithm used in the alg Header Parameter of the ID Token's JOSE Header. For instance, if the alg is HS512, hash the code value with SHA-512, then take the left-most 256 bits and base64url encode them. The c_hash value is a case sensitive string.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Nonce">
            <summary>String value used to associate a Client session with an ID Token, and to mitigate replay attacks. The value is passed through unmodified from the Authentication Request to the ID Token. If present in the ID Token, Clients MUST verify that the nonce Claim Value is equal to the value of the nonce parameter sent in the Authentication Request. If present in the Authentication Request, Authorization Servers MUST include a nonce Claim in the ID Token with the Claim Value being the nonce value sent in the Authentication Request. Authorization Servers SHOULD perform no other processing on nonce values used. The nonce value is a case sensitive string.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.JwtId">
            <summary>JWT ID. A unique identifier for the token, which can be used to prevent reuse of the token. These tokens MUST only be used once, unless conditions for reuse were negotiated between the parties; any such negotiation is beyond the scope of this specification.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Events">
            <summary>Defines a set of event statements that each may add additional claims to fully describe a single logical event that has occurred.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.ClientId">
            <summary>OAuth 2.0 Client Identifier valid at the Authorization Server.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Scope">
            <summary>OpenID Connect requests MUST contain the "openid" scope value. If the openid scope value is not present, the behavior is entirely unspecified. Other scope values MAY be present. Scope values used that are not understood by an implementation SHOULD be ignored.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Actor">
            <summary>The "act" (actor) claim provides a means within a JWT to express that delegation has occurred and identify the acting party to whom authority has been delegated.The "act" claim value is a JSON object and members in the JSON object are claims that identify the actor. The claims that make up the "act" claim identify and possibly provide additional information about the actor.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.MayAct">
            <summary>The "may_act" claim makes a statement that one party is authorized to become the actor and act on behalf of another party. The claim value is a JSON object and members in the JSON object are claims that identify the party that is asserted as being eligible to act for the party identified by the JWT containing the claim.</summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Id">
            <summary>
            an identifier
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.IdentityProvider">
            <summary>
            The identity provider
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Role">
            <summary>
            The role
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Roles">
            <summary>
            The roles
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.ReferenceTokenId">
            <summary>
            The reference token identifier
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Confirmation">
            <summary>
            The confirmation
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.Algorithm">
            <summary>
            The algorithm
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.JsonWebKey">
            <summary>
            JSON web key
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.TokenType">
            <summary>
            The token type
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.DPoPHttpMethod">
            <summary>
            DPoP HTTP method
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.DPoPHttpUrl">
            <summary>
            DPoP HTTP URL
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.DPoPAccessTokenHash">
            <summary>
            DPoP access token hash
            </summary>
        </member>
        <member name="T:IdentityModel.JwtClaimTypes.JwtTypes">
            <summary>
            Values for strongly typed JWTs
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.JwtTypes.AccessToken">
            <summary>
            OAuth 2.0 access token
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.JwtTypes.AuthorizationRequest">
            <summary>
            JWT secured authorization request
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.JwtTypes.DPoPProofToken">
            <summary>
            DPoP proof token
            </summary>
        </member>
        <member name="T:IdentityModel.JwtClaimTypes.ConfirmationMethods">
            <summary>
            Values for the cnf claim
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.ConfirmationMethods.JsonWebKey">
            <summary>
            JSON web key
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.ConfirmationMethods.JwkThumbprint">
            <summary>
            JSON web key thumbprint
            </summary>
        </member>
        <member name="F:IdentityModel.JwtClaimTypes.ConfirmationMethods.X509ThumbprintSha256">
            <summary>
            X.509 certificate thumbprint using SHA256
            </summary>
        </member>
        <member name="F:IdentityModel.OidcConstants.StandardScopes.OpenId">
            <summary>REQUIRED. Informs the Authorization Server that the Client is making an OpenID Connect request. If the <c>openid</c> scope value is not present, the behavior is entirely unspecified.</summary>
        </member>
        <member name="F:IdentityModel.OidcConstants.StandardScopes.Profile">
            <summary>OPTIONAL. This scope value requests access to the End-User's default profile Claims, which are: <c>name</c>, <c>family_name</c>, <c>given_name</c>, <c>middle_name</c>, <c>nickname</c>, <c>preferred_username</c>, <c>profile</c>, <c>picture</c>, <c>website</c>, <c>gender</c>, <c>birthdate</c>, <c>zoneinfo</c>, <c>locale</c>, and <c>updated_at</c>.</summary>
        </member>
        <member name="F:IdentityModel.OidcConstants.StandardScopes.Email">
            <summary>OPTIONAL. This scope value requests access to the <c>email</c> and <c>email_verified</c> Claims.</summary>
        </member>
        <member name="F:IdentityModel.OidcConstants.StandardScopes.Address">
            <summary>OPTIONAL. This scope value requests access to the <c>address</c> Claim.</summary>
        </member>
        <member name="F:IdentityModel.OidcConstants.StandardScopes.Phone">
            <summary>OPTIONAL. This scope value requests access to the <c>phone_number</c> and <c>phone_number_verified</c> Claims.</summary>
        </member>
        <member name="F:IdentityModel.OidcConstants.StandardScopes.OfflineAccess">
            <summary>This scope value MUST NOT be used with the OpenID Connect Implicit Client Implementer's Guide 1.0. See the OpenID Connect Basic Client Implementer's Guide 1.0 (http://openid.net/specs/openid-connect-implicit-1_0.html#OpenID.Basic) for its usage in that subset of OpenID Connect.</summary>
        </member>
        <member name="T:IdentityModel.Principal">
            <summary>
            Helper class to create ClaimsPrincipal
            </summary>
        </member>
        <member name="P:IdentityModel.Principal.Anonymous">
            <summary>
            Gets an anonymous ClaimsPrincipal.
            </summary>
        </member>
        <member name="M:IdentityModel.Principal.Create(System.String,System.Security.Claims.Claim[])">
            <summary>
            Creates a ClaimsPrincipal using the specified authentication type and claims.
            </summary>
            <param name="authenticationType">Type of the authentication.</param>
            <param name="claims">The claims.</param>
            <returns></returns>
        </member>
        <member name="M:IdentityModel.Principal.CreateFromCertificate(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.Boolean)">
            <summary>
            Creates a ClaimsPrincipal based on information found in an X509 certificate.
            </summary>
            <param name="certificate">The certificate.</param>
            <param name="authenticationType">Type of the authentication.</param>
            <param name="includeAllClaims">if set to <c>true</c> [include all claims].</param>
            <returns></returns>
        </member>
        <member name="T:IdentityModel.StringExtensions">
            <summary>
            Extensions for strings
            </summary>
        </member>
        <member name="M:IdentityModel.StringExtensions.ToSha256(System.String)">
            <summary>
            Creates a SHA256 hash of the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>A hash</returns>
        </member>
        <member name="M:IdentityModel.StringExtensions.ToSha512(System.String)">
            <summary>
            Creates a SHA512 hash of the specified input.
            </summary>
            <param name="input">The input.</param>
            <returns>A hash</returns>
        </member>
        <member name="T:IdentityModel.TimeConstantComparer">
            <summary>
            Helper class to do equality checks without leaking timing information
            </summary>
        </member>
        <member name="M:IdentityModel.TimeConstantComparer.IsEqual(System.String,System.String)">
            <summary>
            Checks two strings for equality without leaking timing information.
            </summary>
            <param name="s1">string 1.</param>
            <param name="s2">string 2.</param>
            <returns>
            	<c>true</c> if the specified strings are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:System.Net.Http.BasicAuthenticationHeaderValue">
            <summary>
            HTTP Basic Authentication authorization header
            </summary>
            <seealso cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
        </member>
        <member name="M:System.Net.Http.BasicAuthenticationHeaderValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.BasicAuthenticationHeaderValue"/> class.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:System.Net.Http.BasicAuthenticationHeaderValue.EncodeCredential(System.String,System.String)">
            <summary>
            Encodes the credential.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">userName</exception>
        </member>
        <member name="T:System.Net.Http.BasicAuthenticationOAuthHeaderValue">
            <summary>
            HTTP Basic Authentication authorization header for RFC6749 client authentication
            </summary>
            <seealso cref="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
        </member>
        <member name="M:System.Net.Http.BasicAuthenticationOAuthHeaderValue.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Net.Http.BasicAuthenticationOAuthHeaderValue"/> class.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
        </member>
        <member name="M:System.Net.Http.BasicAuthenticationOAuthHeaderValue.EncodeCredential(System.String,System.String)">
            <summary>
            Encodes the credential.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">userName</exception>
        </member>
    </members>
</doc>
